/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import ws.CarWebService;
import ws.CarWebService_Service;
import ws.CustomerDBO;
import ws.PartDBO;
import ws.RequirementServiceDBO;

/**
 *
 * @author mrkho
 */
public class RequirementFrame extends javax.swing.JFrame {
    
    private CarWebService_Service carServices;
    private CarWebService port;
    /**
     * Creates new form SourceFrame
     */
    public RequirementFrame() {
        carServices = new CarWebService_Service();
        port = carServices.getCarWebServicePort();
        
        initComponents();
        loadAllRequirement();
        showPart();
        showCustomer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listRequirement = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtRequirementID = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnBackToMainMenu = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cmbPartID = new javax.swing.JComboBox<>();
        cmbCusID = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        cmbDate = new org.jdesktop.swingx.JXDatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listRequirement.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listRequirementValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listRequirement);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Search");

        jLabel3.setText("Supplier ID");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        jLabel4.setText("part ID");

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bodoni MT", 3, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Requirement Management");

        jLabel5.setText("Customer ID");

        btnBackToMainMenu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBackToMainMenu.setText("Back To Menu");
        btnBackToMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToMainMenuActionPerformed(evt);
            }
        });

        jLabel6.setText("Description");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane2.setViewportView(txtDescription);

        jLabel7.setText("Date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(20, 20, 20)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtRequirementID)
                                            .addComponent(cmbPartID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane2))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbCusID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(58, 58, 58)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(61, 61, 61)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(48, 48, 48)
                                        .addComponent(cmbDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBackToMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBackToMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtRequirementID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbPartID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbCusID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(9, 9, 9))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        if (evt.getKeyCode() == 10) { //enter is pressed
                searchByRequirementID();
        }
    }//GEN-LAST:event_txtSearchKeyPressed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(checkInputValue()){    
            String requirementID = txtRequirementID.getText();
            String partID = (String)cmbPartID.getSelectedItem();
            String customerID = (String)cmbCusID.getSelectedItem();
            String descripiton = txtDescription.getText();
            String dateRequirement = formatDateSQL(cmbDate.getDate());
            String add = port.insertRequirement(requirementID, partID, customerID, descripiton, dateRequirement);
            JOptionPane.showMessageDialog(rootPane, add);
            //refresh listbox to update data from database
            loadAllRequirement();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if(listRequirement.getSelectedIndex() !=-1){
            if(checkInputValue()){
                String requirementID = txtRequirementID.getText();
                String descripiton = txtDescription.getText();
                String dateRequirement = formatDateSQL(cmbDate.getDate());
                String update = port.updateRequirement(requirementID, descripiton, dateRequirement);
                JOptionPane.showMessageDialog(rootPane, update);
                loadAllRequirement();
            }
        }
        else
            JOptionPane.showMessageDialog(rootPane, "Please select a supplier");
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(listRequirement.getSelectedIndex() != -1){
            String requirementID = txtRequirementID.getText();
            String delete = port.deleteRequirement(requirementID);
            JOptionPane.showMessageDialog(rootPane, delete);
            loadAllRequirement();
        }
        else
            JOptionPane.showMessageDialog(rootPane, "Please select a brand");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void listRequirementValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listRequirementValueChanged
        SimpleDateFormat datePicker = new SimpleDateFormat("dd.MM.yyyy");
        if(listRequirement.getSelectedIndex() != -1){
            try {
                RequirementServiceDBO requirement = listRequirement.getSelectedValue();
                txtRequirementID.setText(requirement.getRequirementID());
                cmbPartID.addItem(requirement.getPartID());
                cmbCusID.addItem(requirement.getCustomerID());
                txtDescription.setText(requirement.getRequirementDescription());
                cmbDate.setDate(datePicker.parse(requirement.getDateRequirement()));
            } catch (ParseException ex) {
                Logger.getLogger(RequirementFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_listRequirementValueChanged

    private void btnBackToMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToMainMenuActionPerformed
        MainMenuFrame mainFrame = new MainMenuFrame();
        mainFrame.setVisible(true);
    }//GEN-LAST:event_btnBackToMainMenuActionPerformed
    private void searchByRequirementID() {
        String requirementID = txtSearch.getText();
        if (!getValidNumber(requirementID)) {
            loadAllRequirement();
        } else {
            ArrayList<RequirementServiceDBO> requirement = (ArrayList<RequirementServiceDBO>) port.getRequirementByID(requirementID);
            DefaultListModel<RequirementServiceDBO> defaultModel = new DefaultListModel<>();

            for (RequirementServiceDBO req : requirement) {
                defaultModel.addElement(req);
            }

            listRequirement.setModel(defaultModel);
        }
    }
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBackToMainMenu;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbCusID;
    private org.jdesktop.swingx.JXDatePicker cmbDate;
    private javax.swing.JComboBox<String> cmbPartID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<RequirementServiceDBO> listRequirement;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtRequirementID;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
    private void loadAllRequirement() {
        ArrayList<RequirementServiceDBO> requirement = (ArrayList<RequirementServiceDBO>) port.getAllRequirement();
        DefaultListModel<RequirementServiceDBO> defaultModel = new DefaultListModel<>();

        for (RequirementServiceDBO req : requirement) {
            defaultModel.addElement(req);
        }

        listRequirement.setModel(defaultModel);
    }
    
    public void showCustomer() {
        ArrayList<CustomerDBO> customer = (ArrayList<CustomerDBO>)port.getAllCustomer();
        DefaultComboBoxModel<String> customerModel = new DefaultComboBoxModel();
        for (int i = 0; i < customer.size(); i++) {
            String getCustomerID = customer.get(i).getCustomerID();
            customerModel.addElement(getCustomerID);
        }
        cmbCusID.setModel(customerModel);
    }
    
    public void showPart() {
        ArrayList<PartDBO> part = (ArrayList<PartDBO>)port.getAllPart();
        DefaultComboBoxModel<String> partModel = new DefaultComboBoxModel();
        for (int i = 0; i < part.size(); i++) {
            String getPartID = part.get(i).getPartID();
            partModel.addElement(getPartID);
        }
        cmbPartID.setModel(partModel);
    }
    
    private String formatDateSQL(Date pickedDate) {     
        DateFormat oDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String dateSQL = oDateFormat.format(pickedDate);
        return dateSQL;
    }
    
    public boolean checkInputValue() {
        String requirementID = txtRequirementID.getText();
        if (!getValidNumber(requirementID)) {
            JOptionPane.showMessageDialog(rootPane, " requirementID is not null value and must be numeric!");
            return false;
        }
        return true;
    }
    public static boolean getValidNumber(String str1) {
        return str1.matches("\\d+");
    }
}
